@use '../base/root' as *;
@use '../abstracts/variables' as *;
@use './functions' as *;
@use 'sass:color';

// Mixins for Repeated Styles or Functions.

// ========================= //
// Default font declaration. //
// ========================= //
@mixin default-font {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
}

// ====================================================== //
// Flexbox layout with horizontal and vertical centering. //
// ====================================================== //
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// ======= //
// Overlay //
// ======= //
@mixin overlay($z-index: -1, $background: linear-gradient(0deg, rgb(0 0 0 / 0.5), rgb(0 0 0 / 0))) {
  position: relative;
  isolation: isolate;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    z-index: $z-index;
    background: $background;
  }
}

// =============== //
// Gradient Shadow //
// =============== //
@mixin gradient-shadow($deg, $color-1, $color-2, $z-index: -1, $blur-1, $blur-2, $blur-opacity: 0.5) {
  background: linear-gradient($deg, $color-1, $color-2);
  position: relative;
  box-shadow: unset;
  isolation: isolate;
  &::before,
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    z-index: $z-index;
    background: inherit;
  }
  &::before {
    filter: blur($blur-1);
  }
  &::after {
    filter: blur($blur-2);
    opacity: $blur-opacity;
  }
}

// ======== //
// Flex Box //
// ======== //
@mixin flex($justify-content, $align-items: center, $flex-direction: row) {
  display: flex;
  justify-content: $justify-content;
  align-items: $align-items;
  flex-direction: $flex-direction;
}

// ==== //
// Grid //
// ==== //
@mixin grid($columns, $rows, $areas: null, $gap: 0) {
  display: grid;
  @if $areas {
    grid-template-areas: $areas;
  }
  grid-template-rows: $rows;
  grid-template-columns: $columns;
  gap: $gap;
}

// ============================== //
// After & Before pseudo elements //
// ============================== //
@mixin pseudo-elem($location: before, $content: '', $position: relative, $top: 0, $right: 0, $bottom: 0, $left: 0) {
  &:#{$location} {
    content: $content;
    position: $position;
    inset: $top $right $bottom $left;
    @content;
  }
}

// ==================================================== //
// Hides the scrollbar but keeps the ability to scroll. //
// ==================================================== //
@mixin hide-scroll {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
  &::-webkit-scrollbar {
    display: none;
  }
}

// ==================================== //
// Centers an element inside a flexbox. //
// ==================================== //
@mixin center-horizontal-for-scroll {
  > :first-child {
    margin-inline-start: auto;
  }
  > :last-child {
    margin-inline-end: auto;
  }
}
